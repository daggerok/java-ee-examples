env:
  global:
  - TERM=dumb
  - secure: uBVw9ouBYZOBGwUoeotrvMYLbJbj3qL5VwYfAZvny2Cc5f9G4kUlSEEh6eMysGxnhPfftRV29GUfzTkuKeAGUa93+TqutkgoRbI6Lkyjd3Tmzj0xcjSFWWTYPXNJ1jf0LDIZhxYnchFtCNfd1AtldiC4Cx/vrXV35LY0FYpoy8cHE+lxjLQYhd4YiTL+j7wAznvjJiSO1mJ+Kswj00wCD7x9XfX9nEnp/bgsPua/s+iCX+PKk4R2YQKAqGlZ1xV7+rQHG8x0zqwX83yV3gh0QMd33CeMdNnt+258bEVj5/CtlnT+EjbjhH+eXSTnWDJObcrWO8d9dfZlwUHyeAhMy039ANRUmdrL6wurAHvcTUYbRZHRVbTEJkx0wWPmvtQ90OIz0cO3ckWZ7VSLq/XZcKBv+6UPEXXE/qmevIQinf8Y+sdexgXOYQbJKpmUjoyNvTUh683LeP1MjgmAYqbOGFuL6WUuIEtF6nZP5TY6LBYxcnSphg6rjPtpwUF/VFoRAR+oFoqdCqjoxK9RHT7GPHOltOun0I2dL0CVfWSLM84B3tBQzwIEz+hhgYty21cT2eltZpR1suAh9YW5HSWY6VF/kNtNLMlCO/rB1RwJh9IUSNeWnJesRy5i0h8J3HkD8/ivGYkqn2KtWaVlOSTbUj8afVMt0/jeWe+9pewipJc=
notifications:
  email: false
git:
  quiet: true
  depth: false
jdk: openjdk8
node_js: lts/*
python: 3.8
services: docker
addons:
  apt:
    update: true
    packages:
    - docker-compose
    - libxml2-utils
    - docker-ce
    - httpie
    - bash
    - sudo
    - lsof
    - curl
    - jq
install: true
before_install:
- |
  if [ ! -f ${HOME}/.local/daggerok/bash-functions/master/main.bash ] ; then
    mkdir -p ${HOME}/.local/daggerok/bash-functions/master ;
    curl -s https://raw.githubusercontent.com/daggerok/bash-functions/master/main.bash > ${HOME}/.local/daggerok/bash-functions/master/main.bash ;
  fi
  source ${HOME}/.local/daggerok/bash-functions/master/main.bash ;
- stop_any 5432 5672 27017 8080 80 5432 8080 8081 8082 8083 8084 8085 8086 8087 8088
#
- docker-compose version
jobs:
  include:
    - stage: test
      name: java-ee-dwr-example
      script:
      - cd $TRAVIS_BUILD_DIR/java-ee-dwr-example && ./mvnw
    - stage: test
      name: aop-logger
      script:
      - cd $TRAVIS_BUILD_DIR/aop-logger
      - ./gradlew
      - ./gradlew composeUp
      - docker logs -f aop-logger_gradle-aop-logger-app_1 &
      - http :8080/app/api/
      - http :8080/app/api/health
      - http :8080/app/api/ping
      - http :8080/app/api/pong
      - ./gradlew composeDown
    - stage: test
      name: porcupine-bulkhead-jee8
      script:
      - cd $TRAVIS_BUILD_DIR/porcupine-bulkhead-jee8
      - ./gradlew
      - ./gradlew composeUp
      - http :8080/app/async-items/write1 value=ololo
      - http :8080/app/async-items/write2 value=trololo
      - http :8080/app/async-items/read1
      - http :8080/app/async-items/read1/1
      - http :8080/app/async-items/read2
      - http :8080/app/async-items/read2/3 || true
      - ./gradlew composeDown
    - stage: test
      name: async-jax-rs-resources
      script:
      - cd $TRAVIS_BUILD_DIR/async-jax-rs-resources
      - ./gradlew
      - ./gradlew composeUp
      - http :8080/app/items value=ololo
      - http :8080/app/items value=trololo
      - http :8080/app/items/
      - http :8080/app/items/1
      - http :8080/app/items/2
      - http :8080/app/items/3 || true
      - ./gradlew composeDown
    - stage: test
      name: kumuluzee-mp-2.0-jax-ws
      script:
      - cd $TRAVIS_BUILD_DIR/kumuluzee-mp-2.0-jax-ws
      - bash mvnw clean package
      - java -jar ./target/*.jar &
      #- wait_for 8000
      - sleep 15
      - http :8000/
      - http :8000/api/v1/ws
      - http :8000/api/v1/ws\?wsdl
      - curl -XPOST http://localhost:8000/api/v1/ws --header "content-type:text/xml" -d @./request.xml | xmllint --format -
      - stop_any 80 8000
      - docker-compose build --force-rm --no-cache --pull
      - docker-compose up &
      - sleep 35
      - http :8000
      - curl -sS 127.0.0.1:8000/api/v1/ws | xmllint --format -
      - curl -sS "127.0.0.1:8000/api/v1/ws?WSDL" | xmllint --format -
      - curl -XPOST http://127.0.0.1:8000/api/v1/ws --header "content-type:text/xml" -d @./request.xml | xmllint --format -
      - curl -XPOST http://127.0.0.1:8000/api/v1/ws --header "content-type:text/xml" -d @./request.xml | xmllint --format - | grep id
      - curl -XPOST http://127.0.0.1:8000/api/v1/ws --header "content-type:text/xml" -d @./request.xml | xmllint --format - | grep id
      - curl -XPOST http://127.0.0.1:8000/api/v1/ws --header "content-type:text/xml" -d @./request.xml | xmllint --format - | grep id
      - docker-compose down -v
      - stop_any 80 8000
    - stage: test
      name: faces maven
      script:
      - cd $TRAVIS_BUILD_DIR/spring-faces
      - bash ./mvnw
      - bash ./mvnw clean package com.dkanejs.maven.plugins:docker-compose-maven-plugin:1.0.1:up
      - docker logs -f springfaces_maven-spring-faces-app_1 &
      - sleep 40
      - http :8080/app/
      - bash ./mvnw com.dkanejs.maven.plugins:docker-compose-maven-plugin:1.0.1:down
    - stage: test
      name: kotlin-kafka
      script:
      - cd $TRAVIS_BUILD_DIR/kotlin-kafka
      - wget -q -O kafka.jar https://github.com/daggerok/embedded-kafka/raw/mvn-repo/embedded-kafka-0.0.3-all.jar
      - >
        java -jar kafka.jar \
                  --zookeeperPort=2181 \
                  --zookeeperDir=/tmp \
                  --kafkaPort=9092 \
                  --kafkaTopics=topic1,topic2 \
                  --httpPort=8081 \
                  --httpContext=/ &
      - ./gradlew >/dev/null
      - wait_for 9092 8081 2181
      - java -Djava.net.preferIPv4Stack=true -jar build/libs/*-swarm.jar &
      - wait_for 8080
      - sleep 15
      - http :8080/kafka/query
      - http :8080/kafka/produce
      - http :8080/kafka/produce
      - stop_any 8080 8080 9092 2181 80
      - sudo killall -9 java
#    - stage: test
#      name: kotlin-swarm
#      cache: false
#      script:
#      - cd $TRAVIS_BUILD_DIR/kotlin-swarm && ./mvnw >/dev/null
#      - cd $TRAVIS_BUILD_DIR/kotlin-swarm && ./mvnw com.dkanejs.maven.plugins:docker-compose-maven-plugin:1.0.1:up
#      - sleep 25
#      - http :8080
#      - http :8080/health
#      - cd $TRAVIS_BUILD_DIR/kotlin-swarm && ./mvnw com.dkanejs.maven.plugins:docker-compose-maven-plugin:1.0.1:down
#      #
#      - cd $TRAVIS_BUILD_DIR/kotlin-swarm && ./gradlew composeUp || true
#      - sleep 25
#      - http :8080
#      - http :8080/health
#      - cd $TRAVIS_BUILD_DIR/kotlin-swarm && ./gradlew composeDown || true
#      #
#      - cd $TRAVIS_BUILD_DIR/kotlin-swarm && ./mvnw
#      - docker-compose -f docker-compose-maven.yaml build
#      - docker-compose -f docker-compose-maven.yaml up &
#      - sleep 40
#      - http :8080
#      - http :8080/health
#      - docker-compose -f docker-compose-maven.yaml down -v
#      - stop_any 8080 80
    - stage: test
      name: jboss-eap-h2-cdi
      script:
      - cd $TRAVIS_BUILD_DIR/jboss-eap-h2-cdi
      - bash mvnw
      - docker-compose build --force-rm --no-cache --pull
      - docker-compose up --force-recreate --remove-orphans &
      - sleep 20
      - http post :8080/client/update/max
      - http post :8080/client/update/maxp
      - http post :8080/client/update/amaxp
      - http :8080/client/
      - http post :8080/client/update/max\?remove=true
      - http :8080/client/
      - docker-compose down -v --rmi local
    - stage: test
      name: jboss-eap-h2-ejb
      script:
      - cd $TRAVIS_BUILD_DIR/jboss-eap-h2-ejb
      - bash mvnw
      - docker-compose build --force-rm --no-cache --pull
      - docker-compose up --force-recreate --remove-orphans &
      - sleep 20
      - http post :8080/client/update/max
      - http post :8080/client/update/maxp
      - http post :8080/client/update/amaxp
      - http :8080/client/
      - http post :8080/client/update/max\?remove=true
      - http :8080/client/
      - docker-compose down -v --rmi local
    - stage: test
      name: ejb-stateful-singleton
      script:
      - cd $TRAVIS_BUILD_DIR/ejb-stateful-singleton
      - bash mvnw
      - docker-compose build --force-rm --no-cache --pull
      - docker-compose up --force-recreate --remove-orphans &
      - sleep 20
      - http :8080/client/
      - http :8080/client/get\?key=EJB
      - http :8080/client/set\?key=EJB\&value=some-value
      - http :8080/client/get\?key=EJB
      - http post :8080/client/counter/incr
      - http post :8080/client/counter/increment
      - http post :8080/client/counter/decr
      - http post :8080/client/counter/incr
      - http :8080/client/get\?key=EJB
      - http post :8080/client/reset
      - docker-compose down -v
    - stage: test
      name: xmlrpc
      script:
      - cd $TRAVIS_BUILD_DIR/xmlrpc
      - bash mvnw clean package -U -T 4
      - docker-compose build --force-rm --no-cache --pull
      - docker-compose up --force-recreate --remove-orphans &
      - sleep 30
      - http :8080/client/v1/greet/Max
      - docker-compose down -v --rmi local
      ## ext.js
      #- >
      #  for path in \
      #    tomee-ext.js \
      #    glassfish-ext.js \
      #    jboss-eap-ext.js \
      #  ; do
      #    cd $TRAVIS_BUILD_DIR/${path}
      #    bash mvnw clean package -U -T 4
      #    stop_any 8080
      #    docker-compose build --force-rm --pull --no-cache
      #    docker-compose up -d --build --remove-orphans
      #    sleep 30
      #    http :8080/ui/
      #    http :8080/rest-api/health
      #    docker-compose down -v
      #  done
      ## forge-javaee-6-ws
      #- cd $TRAVIS_BUILD_DIR/forge-javaee-6-ws
      #- bash mvnw clean package -U -T 2
      #- docker-compose up --build --force-recreate --remove-orphans -d
      #- sleep 20
      #- http :8080/app/health
      #- http :8080/app/AppEndpoint\?wsdl
      #- curl -XPOST http://localhost:8080/app/AppEndpoint --header "content-type:text/xml" -d @request.xml | xmllint --format -
      #- docker-compose down -v
    - stage: test
      name: forge-ws
      script:
      - cd $TRAVIS_BUILD_DIR/forge-ws
      - bash mvnw clean package -U
      - bash gradlew clean build
      - docker-compose up --build --force-recreate --remove-orphans -d
      - sleep 20
      - http :8080/app/v1/api
      - http ":8080/app/UserService?wsdl"
      - curl -XPOST http://localhost:8080/app/User --header "content-type:text/xml" -d @./src/test/resources/empty-request.xml | xmllint --format -
      - curl -XPOST http://localhost:8080/app/User --header "content-type:text/xml" -d @src/test/resources/named-request.xml | xmllint --format -
      - docker-compose down -v
    - stage: deploy
      name: Deploy docs
      script: skip
      if: branch = "master" AND type NOT IN (pull_request)
      before_deploy:
        - set -e
        - if [ "$TRAVIS_PULL_REQUEST" != "false" ] || [ ".$TRAVIS_BRANCH" != ".master" ] ; then exit 0 ; fi
        - cd $TRAVIS_BUILD_DIR && ./mvnw
      deploy: &pages
        provider: pages
        skip-cleanup: true
        keep-history: true
        target_branch: gh-pages
        # travis encrypt GITHUB_TOKEN=<your github repo token>
        github-token: "$GITHUB_TOKEN"
        local-dir: $TRAVIS_BUILD_DIR/target/generated-docs
        on:
          branch: master
before_cache:
  #- sudo rm -rf $HOME/.gradle/caches/*/fileHashes/fileHashes.bin
  - find ~/.gradle -name "fileHashes.bin" -print0 | xargs -0 rm -rfv '{}'
  - for item in $(find ~/.gradle -name "*.lock") ; do rm -rfv $item ; done
cache:
  packages: true
  directories:
  - ~/.m2
  - ~/.gradle
  - ~/.docker
  - ~/.local/daggerok
